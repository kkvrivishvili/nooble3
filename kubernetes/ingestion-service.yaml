apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingestion-service
  labels:
    app: ingestion-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ingestion-service
  template:
    metadata:
      labels:
        app: ingestion-service
    spec:
      containers:
      - name: ingestion-service
        image: linktree-ai/ingestion-service:latest
        ports:
        - containerPort: 8004
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: openai-api-key
        - name: SUPABASE_URL
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: supabase-url
        - name: SUPABASE_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: supabase-key
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: redis-url
        - name: EMBEDDING_SERVICE_URL
          value: "http://embedding-service:8001"
        - name: LOAD_CONFIG_FROM_SUPABASE
          value: "true"
        - name: TESTING_MODE
          value: "true"
        - name: PYTHONPATH
          value: "/app"
        - name: LOG_LEVEL
          value: "INFO"
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8004
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 8004
          initialDelaySeconds: 120
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: ingestion-service
spec:
  selector:
    app: ingestion-service
  ports:
  - port: 8004
    targetPort: 8004
  type: ClusterIP